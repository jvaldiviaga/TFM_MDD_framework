#!/usr/bin/env python3
# ============================================================
# Script: filter_epochs_by_quality.py
#
# OBJETIVO:
# Filtrar ensayos MEG marcados como "bad" tras evaluaci√≥n de calidad
# Generar nuevo archivo .epo_filtered.fif solo con ensayos v√°lidos
# Justificar todos los umbrales aplicados para an√°lisis cl√≠nico
# ============================================================

import os
import pandas as pd
import mne
import numpy as np

def filter_epochs_by_quality(epo_path, quality_csv_path, heatmap_path=None):
    subject = os.path.basename(epo_path).split("_")[0]
    print(f"\nüîé Evaluando: {subject}")

    # --- Cargar epochs ---
    print(f"üìÇ Cargando archivo de epochs: {epo_path}")
    epochs = mne.read_epochs(epo_path, preload=True, verbose=False)
    print("üîç Total de ensayos en epochs:", len(epochs))

    # --- Cargar m√©tricas de calidad ---
    if not os.path.exists(quality_csv_path):
        print(f"‚ùå No se encontr√≥ el CSV de calidad: {quality_csv_path}")
        return

    df = pd.read_csv(quality_csv_path)
    print("üîç Total de filas en CSV:", len(df))

    # --- Verificaci√≥n de alineaci√≥n ---
    if len(df) != len(epochs):
        print("‚ùå El n√∫mero de filas del CSV no coincide con los ensayos del .fif")
        print("üîé Verifica que el archivo CSV y el .epo.fif sean del mismo sujeto y no prefiltrados.")
        return
    else:
        print("‚úÖ Verificaci√≥n superada: el CSV y el archivo .fif est√°n alineados (1 fila por ensayo)")


    # --- Clasificaci√≥n de severidad por ensayo ---
    # UMBRALES JUSTIFICADOS:
    # - max_amplitude > 4000 ‚Üí se√±al potencialmente artefactual, pero tolerable ("warning")
    # - max_amplitude > 8000 ‚Üí artefacto severo (probable movimiento, saturaci√≥n) ‚Üí "bad"
    # - zscore_rms > 3       ‚Üí ensayo estad√≠sticamente aberrante (outlier) ‚Üí "bad"
    # Referencias:
    # ‚Ä¢ MNE-Python Documentation
    # ‚Ä¢ Cavanagh et al. (2011) ‚Äî Electrophysiology of error and conflict monitoring
    # ‚Ä¢ Luck, S. J. (2014) ‚Äî An Introduction to the Event-Related Potential Technique

    df["severity"] = "good"
    df.loc[(df["max_amplitude"] > 4000) & (df["max_amplitude"] <= 8000), "severity"] = "warning"
    df.loc[(df["zscore_rms"] > 3) | (df["max_amplitude"] > 8000), "severity"] = "bad"

    n_total = len(df)
    n_good = (df["severity"] == "good").sum()
    n_warn = (df["severity"] == "warning").sum()
    n_bad = (df["severity"] == "bad").sum()
    z_bad = df[(df["severity"] == "bad") & (df["zscore_rms"] > 3)]["zscore_rms"].round(2).tolist()

    print(f"üî¢ Total de ensayos: {n_total}")
    print(f"‚úîÔ∏è Buenos (good): {n_good}")
    print(f"‚ö†Ô∏è Aviso  (warning): {n_warn} ‚Üí amplitud moderada")
    print(f"‚ùå Malos  (bad): {n_bad} ‚Üí zscore > 3 o max_amplitude > 8000")
    print(f"üìà Z-scores de malos: {z_bad[:5]}{' ...' if len(z_bad) > 5 else ''}")

    # --- UMBRAL DE CALIDAD GLOBAL ---
    # Justificaci√≥n: si m√°s del 20‚ÄØ% de los ensayos son "bad", se considera el sujeto cl√≠nicamente no fiable
    bad_ratio = n_bad / n_total
    if bad_ratio > 0.20:
        print(f"\n‚ùå {subject} descartado: {bad_ratio*100:.1f}% de ensayos marcados como 'bad'")
        return

    # --- Selecci√≥n y guardado de ensayos v√°lidos ---
    # --- Selecci√≥n y guardado de ensayos v√°lidos ---
    valid_rows = df[df["severity"].isin(["good", "warning"])]
    selected_epochs = valid_rows["epoch"].astype(int).tolist()

    # Verificaci√≥n r√°pida
    if max(selected_epochs, default=-1) >= len(epochs):
       print(f"‚ùå √çndices fuera de rango detectados. Epochs tiene {len(epochs)} ensayos.")
       return

    
    try:
        epochs_filtered = epochs[selected_epochs]
    except Exception as e:
        print(f"‚ùå Error al acceder a los ensayos seleccionados con indexado directo: {e}")
        return


    out_path = epo_path.replace("_epo.fif", "_epo_filtered.fif")
    epochs_filtered.save(out_path, overwrite=True)
    print(f"‚úÖ Archivo guardado con ensayos filtrados en: {out_path}")
